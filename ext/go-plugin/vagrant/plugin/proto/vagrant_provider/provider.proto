syntax = "proto3";
package vagrant.provider;

import "github.com/hashicorp/vagrant/ext/go-plugin/vagrant/plugin/proto/vagrant_caps/capabilities.proto";
import "github.com/hashicorp/vagrant/ext/go-plugin/vagrant/plugin/proto/vagrant_common/common.proto";
import "github.com/hashicorp/vagrant/ext/go-plugin/vagrant/plugin/proto/vagrant_config/config.proto";
import "github.com/hashicorp/vagrant/ext/go-plugin/vagrant/plugin/proto/vagrant_io/io.proto";

message ActionRequest {
  string name = 1;
  string machine = 2;
}
message ActionResponse {
  repeated string result = 1;
  string error = 2;
}

message InfoResponse {
  repeated string capabilities = 1;
  string description = 2;
  int64 priority = 3;
}

message RunActionRequest {
  string name = 1;
  string data = 2;
  string machine = 3;
}

message RunActionResponse {
  string data = 1;
  string error = 2;
}

message SshInfoResponse {
  string host = 1;
  int64 port = 2;
  string private_key_path = 3;
  string username = 4;
  string error = 5;
}
message StateResponse {
  string id = 1;
  string short_description = 2;
  string long_description = 3;
  string error = 4;
}

service Provider {
  rpc Action(ActionRequest) returns (ActionResponse);
  rpc Info(vagrant.common.NullRequest) returns (InfoResponse);
  rpc IsInstalled(vagrant.common.EmptyRequest) returns (vagrant.common.IsResponse);
  rpc IsUsable(vagrant.common.EmptyRequest) returns (vagrant.common.IsResponse);
  rpc MachineIdChanged(vagrant.common.EmptyRequest) returns (vagrant.common.EmptyResponse);
  rpc Name(vagrant.common.NullRequest) returns (vagrant.common.NameResponse);
  rpc RunAction(RunActionRequest) returns (RunActionResponse);
  rpc SshInfo(vagrant.common.EmptyRequest) returns (SshInfoResponse);
  rpc State(vagrant.common.EmptyRequest) returns (StateResponse);
  // These are IO helpers for streaming
  rpc Read(vagrant.io.ReadRequest) returns (vagrant.io.ReadResponse);
  rpc Write(vagrant.io.WriteRequest) returns (vagrant.io.WriteResponse);
  // These are Config helpers
  rpc ConfigAttributes(vagrant.common.NullRequest) returns (vagrant.config.AttributesResponse);
  rpc ConfigLoad(vagrant.config.LoadRequest) returns (vagrant.config.LoadResponse);
  rpc ConfigValidate(vagrant.config.ValidateRequest) returns (vagrant.config.ValidateResponse);
  rpc ConfigFinalize(vagrant.config.FinalizeRequest) returns (vagrant.config.FinalizeResponse);
  // Capabilities
  rpc GuestCapabilities(vagrant.common.NullRequest) returns (vagrant.caps.CapabilitiesResponse);
  rpc GuestCapability(vagrant.caps.GuestCapabilityRequest) returns (vagrant.caps.GuestCapabilityResponse);
  rpc HostCapabilities(vagrant.common.NullRequest) returns (vagrant.caps.CapabilitiesResponse);
  rpc HostCapability(vagrant.caps.HostCapabilityRequest) returns (vagrant.caps.HostCapabilityResponse);
  rpc ProviderCapabilities(vagrant.common.NullRequest) returns (vagrant.caps.ProviderCapabilitiesResponse);
  rpc ProviderCapability(vagrant.caps.ProviderCapabilityRequest) returns (vagrant.caps.ProviderCapabilityResponse);
}