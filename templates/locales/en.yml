en:
  vagrant:

#-------------------------------------------------------------------------------
# Translations for exception classes
#-------------------------------------------------------------------------------
    errors:
      base_vm_not_found: The base VM with the name '%{name}' was not found.
      box_not_found: Box '%{name}' could not be found.
      cli_missing_env: This command requires that a Vagrant environment be properly passed in as the last parameter.
      multi_vm_required: A multi-vm environment is required for name specification to this command.
      multi_vm_target_required: `vagrant %{command}` requires a specific VM name to target in a multi-VM environment.
      no_env: No Vagrant environment detected. Run `vagrant init` to set one up.
      ssh_authentication_failed: |-
        SSH authentication failed! This is typically caused by the public/private
        keypair for the SSH user not being properly set on the guest VM. Please
        verify that the guest VM is setup with the proper public key, and that
        the private key path for Vagrant is setup propery as well.
      ssh_key_bad_permissions: |-
        The private key to connect to this box via SSH has invalid permissions
        set on it. The permissions of the private key should be set to 0600, otherwise SSH will
        ignore the key. Vagrant tried to do this automatically for you but failed. Please set the
        permissions on the following file to 0600 and then try running this command again:

        <%= key_path %>
      ssh_unavailable_windows: |-
        `vagrant ssh` isn't available on the Windows platform. The
        vagrant.ppk file for use with Putty is available at:

          <%= key_path %>.ppk

        To use this create a new Putty session for `vagrant@localhost`
        on port `<%= ssh_port %>`, in the Connection>SSH>Auth
        configuration section navigate to the vagrant.ppk file,
        select it, save the session for later use, and connect.

        For a more detailed guide please consult:

          http://vagrantup.com/docs/getting-started/windows.

      virtualbox_invalid_ose: |-
        Vagrant has detected you're using an OSE ("Open Source Edition") of VirtualBox.
        Vagrant currently doesn't support any of the OSE editions due to slight API
        differences. Please download the regular package from virtualbox.org and install
        to continue.
      virtualbox_invalid_version: |-
        Vagrant has detected that you have VirtualBox version %{version} installed!
        Vagrant requires that you use at least VirtualBox version 3.2. Please install
        a more recent version of VirtualBox to continue.
      virtualbox_not_detected: |-
        Vagrant could not detect VirtualBox! Make sure VirtualBox is properly installed.
        If VirtualBox is installed, it may be an incorrect version. Vagrant currently
        requires VirtualBox 3.2.x. Please install the proper version to continue.
      vm_creation_required: VM must be created before running this command. Run `vagrant up` first.
      vm_not_found: A VM by the name of %{name} was not found.

#-------------------------------------------------------------------------------
# Translations for commands. e.g. `vagrant x`
#-------------------------------------------------------------------------------
    commands:
      box:
        no_installed_boxes: There are no installed boxes! Use `vagrant box add` to add some.
      status:
        output: |-
          Current VM states:

          %{states}

          %{message}
        not_created: |-
          The environment has not yet been created. Run `vagrant up` to
          create the environment.
        powered_off: The VM is powered off. To restart the VM, simply run `vagrant up`
        running: |-
          The VM is running. To stop this VM, you can run `vagrant halt` to
          shut it down forcefully, or you can run `vagrant suspend` to simply
          suspend the virtual machine. In either case, to restart it again,
          simply run `vagrant up`.
        saved: To resume this VM, simply run `vagrant up`.
        listing: |-
          This environment represents multiple VMs. The VMs are all listed
          above with their current state. For more information about a specific
          VM, run `vagrant status NAME`.
